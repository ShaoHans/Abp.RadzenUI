@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Hosting
@using Microsoft.Extensions.Options
@inject IHostEnvironment Env
@inject ThemeService ThemeService
@inject IOptions<AbpRadzenUIOptions> AbpRadzenUIOptions
@inject IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en" dir="@(ThemeService.RightToLeft == true ? "rtl" : "ltr")">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link href="_content/AbpRadzen.Blazor.Server.UI/css/site.css" rel="stylesheet" />
    <HeadOutlet @rendermode="InteractiveServer" />
    <link rel="preload" href="_content/AbpRadzen.Blazor.Server.UI/fonts/MaterialSymbolsOutlined.woff2" as="font" type="font/woff2">
    <RadzenTheme Theme="@_theme" @rendermode="InteractiveServer" />
</head>
<body class="rz-scrollbars">
    <Routes @rendermode="InteractiveServer" />
    <div id="blazor-error-ui">
        @if (Env.IsDevelopment())
        {
            <text>
                An unhandled exception has occurred. See browser dev tools for details.
            </text>
        }
        else
        {
            <text>
                An error has occurred. This app may no longer respond until reloaded.
            </text>
        }
        <a href="/" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.web.js"></script>
    <script async src="_content/AbpRadzen.Blazor.Server.UI/js/highlight.pack.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
</body>
</html>

@code {
    string _theme = "material-dark";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = Utils.AbpRadzenUICookieHelper.GetThemeCookie(HttpContextAccessor.HttpContext!)
                ?? AbpRadzenUIOptions.Value.Theme.Default;
    }

}